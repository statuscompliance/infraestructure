version: "3.8"
services:
  mysql:
    restart: always
    image: mysql:8.3.0
    container_name: mysql
    expose:
      - "3306"
    networks:
      - mysql_network
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    healthcheck:
      test: ["CMD-SHELL", "sleep 20 && exit 0"]
      interval: 1s
      timeout: 22s
      retries: 5
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql

  status-backend:
    restart: always
    container_name: status-backend
    build:
      context: ./status-backend
      dockerfile: Dockerfile
    command: sh -c "rm -rf node_modules && npm install && npm run dev"
    ports:
      - "3001:3001"
    networks:
      - web_network
      - mysql_network
    depends_on:
      mysql:
        condition: service_healthy
    image: status-backend

  status-frontend:
    restart: always
    container_name: status-frontend
    build:
      context: ./status-frontend
      dockerfile: Dockerfile
    command: npm start
    ports:
      - "3000:3000"
    networks:
      - web_network

  nodered:
    restart: always
    container_name: node-red-status
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "1880:1880"
    volumes:
      - ./settings.js:/data/settings.js
      - ./node-red-status:/data
    command: node-red
    image: node-red
    networks:
      - web_network

networks:
  mysql_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  nodered:
    name: node-red-status
